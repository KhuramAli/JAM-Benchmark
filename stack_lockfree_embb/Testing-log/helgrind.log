==2282== Helgrind, a thread error detector
==2282== Copyright (C) 2007-2017, and GNU GPL'd, by OpenWorks LLP et al.
==2282== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==2282== Command: ./code05.out
==2282== Parent PID: 2281
==2282== 
==2282== ---Thread-Announcement------------------------------------------
==2282== 
==2282== Thread #3 was created
==2282==    at 0x572387E: clone (clone.S:71)
==2282==    by 0x4E49EC4: create_thread (createthread.c:100)
==2282==    by 0x4E49EC4: pthread_create@@GLIBC_2.2.5 (pthread_create.c:797)
==2282==    by 0x4C36A27: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==2282==    by 0x511E834: std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==2282==    by 0x109FC0: std::thread::thread<void (&)()>(void (&)()) (in /home/ubuntu/Downloads/2/Threading-master/stack_lockfree_embb/code05.out)
==2282==    by 0x10960F: main (in /home/ubuntu/Downloads/2/Threading-master/stack_lockfree_embb/code05.out)
==2282== 
==2282== ---Thread-Announcement------------------------------------------
==2282== 
==2282== Thread #2 was created
==2282==    at 0x572387E: clone (clone.S:71)
==2282==    by 0x4E49EC4: create_thread (createthread.c:100)
==2282==    by 0x4E49EC4: pthread_create@@GLIBC_2.2.5 (pthread_create.c:797)
==2282==    by 0x4C36A27: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==2282==    by 0x511E834: std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==2282==    by 0x109FC0: std::thread::thread<void (&)()>(void (&)()) (in /home/ubuntu/Downloads/2/Threading-master/stack_lockfree_embb/code05.out)
==2282==    by 0x109600: main (in /home/ubuntu/Downloads/2/Threading-master/stack_lockfree_embb/code05.out)
==2282== 
==2282== ---Thread-Announcement------------------------------------------
==2282== 
==2282== Thread #1 is the program's root thread
==2282== 
==2282== ----------------------------------------------------------------
==2282== 
==2282== Possible data race during read of size 8 at 0x5DA35B0 by thread #3
==2282== Locks held: none
==2282==    at 0x1099A9: consume() (in /home/ubuntu/Downloads/2/Threading-master/stack_lockfree_embb/code05.out)
==2282==    by 0x511E57E: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==2282==    by 0x4C36C26: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==2282==    by 0x4E496DA: start_thread (pthread_create.c:463)
==2282==    by 0x572388E: clone (clone.S:95)
==2282== 
==2282== This conflicts with a previous write of size 8 by thread #2
==2282== Locks held: none
==2282==    at 0x109BD6: produce() (in /home/ubuntu/Downloads/2/Threading-master/stack_lockfree_embb/code05.out)
==2282==    by 0x511E57E: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==2282==    by 0x4C36C26: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==2282==    by 0x4E496DA: start_thread (pthread_create.c:463)
==2282==    by 0x572388E: clone (clone.S:95)
==2282==  Address 0x5da35b0 is 1,584 bytes inside a block of size 1,856 alloc'd
==2282==    at 0x4C30F2F: malloc (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==2282==    by 0x10AE08: embb::base::Allocation::Allocate(unsigned long) (in /home/ubuntu/Downloads/2/Threading-master/stack_lockfree_embb/code05.out)
==2282==    by 0x10AAF6: embb::containers::LockFreeStack<int, embb::containers::LockFreeTreeValuePool<bool, false, embb::base::Allocator<embb::base::Atomic<bool> >, embb::base::Allocator<embb::base::Atomic<int> > > >::LockFreeStack(unsigned long) (in /home/ubuntu/Downloads/2/Threading-master/stack_lockfree_embb/code05.out)
==2282==    by 0x10970A: _GLOBAL__sub_I_stack (in /home/ubuntu/Downloads/2/Threading-master/stack_lockfree_embb/code05.out)
==2282==    by 0x10BD8C: __libc_csu_init (in /home/ubuntu/Downloads/2/Threading-master/stack_lockfree_embb/code05.out)
==2282==    by 0x5623B27: (below main) (libc-start.c:266)
==2282==  Block was alloc'd by thread #1
==2282== 
==2282== ----------------------------------------------------------------
==2282== 
==2282== Possible data race during read of size 4 at 0x5DA35B8 by thread #3
==2282== Locks held: none
==2282==    at 0x109A2C: consume() (in /home/ubuntu/Downloads/2/Threading-master/stack_lockfree_embb/code05.out)
==2282==    by 0x511E57E: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==2282==    by 0x4C36C26: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==2282==    by 0x4E496DA: start_thread (pthread_create.c:463)
==2282==    by 0x572388E: clone (clone.S:95)
==2282== 
==2282== This conflicts with a previous write of size 4 by thread #2
==2282== Locks held: none
==2282==    at 0x109BDD: produce() (in /home/ubuntu/Downloads/2/Threading-master/stack_lockfree_embb/code05.out)
==2282==    by 0x511E57E: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==2282==    by 0x4C36C26: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==2282==    by 0x4E496DA: start_thread (pthread_create.c:463)
==2282==    by 0x572388E: clone (clone.S:95)
==2282==  Address 0x5da35b8 is 1,592 bytes inside a block of size 1,856 alloc'd
==2282==    at 0x4C30F2F: malloc (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==2282==    by 0x10AE08: embb::base::Allocation::Allocate(unsigned long) (in /home/ubuntu/Downloads/2/Threading-master/stack_lockfree_embb/code05.out)
==2282==    by 0x10AAF6: embb::containers::LockFreeStack<int, embb::containers::LockFreeTreeValuePool<bool, false, embb::base::Allocator<embb::base::Atomic<bool> >, embb::base::Allocator<embb::base::Atomic<int> > > >::LockFreeStack(unsigned long) (in /home/ubuntu/Downloads/2/Threading-master/stack_lockfree_embb/code05.out)
==2282==    by 0x10970A: _GLOBAL__sub_I_stack (in /home/ubuntu/Downloads/2/Threading-master/stack_lockfree_embb/code05.out)
==2282==    by 0x10BD8C: __libc_csu_init (in /home/ubuntu/Downloads/2/Threading-master/stack_lockfree_embb/code05.out)
==2282==    by 0x5623B27: (below main) (libc-start.c:266)
==2282==  Block was alloc'd by thread #1
==2282== 
==2282== 
==2282== For counts of detected and suppressed errors, rerun with: -v
==2282== Use --history-level=approx or =none to gain increased speed, at
==2282== the cost of reduced accuracy of conflicting-access information
==2282== ERROR SUMMARY: 200 errors from 2 contexts (suppressed: 0 from 0)
